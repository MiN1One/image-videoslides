{"version":3,"sources":["components/UI/Loader.js","hooks/useHttp.js","components/DropInput/DropInput.js","components/UI/Logo.js","containers/MainView/MainView.js","App.js","reportWebVitals.js","index.js"],"names":["Loader","className","initialState","data","loading","error","reducer","state","action","type","toUpperCase","useHttp","useReducer","dispatch","setData","d","createRequest","useCallback","options","axios","method","url","body","undefined","then","callback","catch","er","console","DropInput","videoRef","useRef","useState","play","setPlay","useEffect","current","pause","useDropzone","onDrop","files","form","FormData","Array","from","forEach","e","append","getRootProps","getInputProps","isDragActive","classDrop","push","view","accept","multiple","onClick","paused","name","controls","ref","src","timestamp","join","memo","Logo","MainView","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAEeA,EAFA,kBAAM,qBAAKC,UAAU,Y,iBCG9BC,EAAe,CACnBC,KAAM,KACNC,SAAS,EACTC,MAAO,MAGHC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,KAAKC,eAClB,IAAK,QACH,MAAO,CACLP,KAAM,KACNC,SAAS,EACTC,MAAO,MAEX,IAAK,UACH,MAAO,CACLF,KAAMK,EAAOL,KACbC,SAAS,GAEb,IAAK,SACH,MAAO,CACLD,KAAM,KACNE,MAAOG,EAAOH,MACdD,SAAS,GAGb,QACE,OAAOG,IAoCEI,EAhCC,WACd,MAA0BC,qBAAWN,EAASJ,GAA9C,mBAAOK,EAAP,KAAcM,EAAd,KAEMC,EAAU,SAACC,GAAD,OAAOF,EAAS,CAAEJ,KAAM,UAAWN,KAAMY,KAEnDC,EAAgBC,uBAAY,SAACC,GAAa,IAAD,EAC7CL,EAAS,CAAEJ,KAAM,UACjBU,IAAM,CACJC,QAAQ,UAAAF,EAAQE,cAAR,eAAgBV,gBAAiB,MACzCW,IAAKH,EAAQG,IACblB,KAAMe,EAAQI,WAAQC,IAErBC,MAAK,YAAyB,IAAdrB,EAAa,EAArBA,KAAQA,KACfU,EAAS,CAAEJ,KAAM,UAAWN,SAE5Be,EAAQO,UAAYP,EAAQO,SAAStB,EAAMW,MAE5CY,OAAM,SAACC,GACNC,QAAQvB,MAAMsB,GACdd,EAAS,CAAEJ,KAAM,SAAUJ,MAAOsB,SAErC,IAEH,MAAO,CACLvB,QAASG,EAAMH,QACfC,MAAOE,EAAMF,MACbF,KAAMI,EAAMJ,KACZa,gBACAF,QAASG,sBAAYH,EAAS,MCtD5Be,G,MAAY,WAChB,MAAkDlB,IAA1CP,EAAR,EAAQA,QAASD,EAAjB,EAAiBA,KAAMa,EAAvB,EAAuBA,cAAeF,EAAtC,EAAsCA,QAChCgB,EAAWC,mBACjB,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAcAC,qBAAU,WACJhC,IACE8B,EACFH,EAASM,QAAQH,OAEjBH,EAASM,QAAQC,WAGpB,CAACJ,EAAM9B,IAEV,MAIImC,YAAY,CAAEC,OA1BQ,SAACC,GACzB,IAAMC,EAAO,IAAIC,SACjBC,MAAMC,KAAKJ,GAAOK,SAAQ,SAAAC,GAAC,OAAIL,EAAKM,OAAO,QAASD,MAEpD9B,EAAc,CACZK,IAAK,cACLC,KAAMmB,EACNrB,OAAQ,OACRK,SAAU,kBAAMS,GAAQ,SAe1Bc,EADF,EACEA,aACAC,EAFF,EAEEA,cACAC,EAHF,EAGEA,aAGIC,EAAY,CAAC,aACfhD,GACFgD,EAAUC,KAAK,qBAGjB,IAAIC,EACF,qCACE,iDAAWJ,KAAX,IAA4BK,OAAO,UAAUC,UAAQ,KACpDL,EACG,mBACA,qBAkCR,OA7BI/C,EACFkD,EACE,qCACE,wBAAQpD,UAAU,iBAAiBuD,QAAS,kBAAM1C,EAAQ,OAA1D,SACE,cAAC,IAAD,CAAgBb,UAAU,uBAE1BgC,GACA,wBACEhC,UAAU,sBACVuD,QAAS,kBAAMtB,EAAQJ,EAASM,QAAQqB,WAE5C,wBACExD,UAAU,mBACVyD,KAAK,QACLC,UAAQ,EACRC,IAAK9B,EACL0B,QAAS,kBAAMtB,EAAQJ,EAASM,QAAQqB,SAL1C,UAOE,wBAAQI,IAAG,iBAAY1D,EAAK2D,UAAjB,cAAwCrD,KAAK,cAP1D,sDAcGL,IACPiD,EAAO,cAAC,EAAD,KAIP,6CAAKpD,UAAWkD,EAAUY,KAAK,MAAUf,KAAzC,aACGK,OAKQW,iBAAKnC,GCpFLoC,EANF,kBACX,sBAAKhE,UAAU,OAAf,iBACM,sBAAMA,UAAU,aAAhB,eADN,UCGIiE,G,MAAW,kBACf,uBAAMjE,UAAU,WAAhB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,SAIW+D,iBAAKE,GCFLC,MATf,WAEE,OACE,qBAAKlE,UAAU,MAAf,SACE,cAAC,EAAD,OCMSmE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9C,MAAK,YAAkD,IAA/C+C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d56bb310.chunk.js","sourcesContent":["const Loader = () => <div className=\"loader\" />;\r\n\r\nexport default Loader;\r\n","import { useCallback, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n  data: null,\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type.toUpperCase()) {\r\n    case 'START':\r\n      return {\r\n        data: null,\r\n        loading: true,\r\n        error: null \r\n      };\r\n    case 'RESOLVE':\r\n      return {\r\n        data: action.data,\r\n        loading: false\r\n      }\r\n    case 'REJECT':\r\n      return {\r\n        data: null,\r\n        error: action.error,\r\n        loading: false\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst useHttp = () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const setData = (d) => dispatch({ type: 'RESOLVE', data: d });\r\n\r\n  const createRequest = useCallback((options) => {\r\n    dispatch({ type: 'start' });\r\n    axios({\r\n      method: options.method?.toUpperCase() || 'GET',\r\n      url: options.url,\r\n      data: options.body || undefined,\r\n    })\r\n      .then(({ data: { data } }) => {\r\n        dispatch({ type: 'resolve', data });\r\n\r\n        options.callback && options.callback(data, setData);\r\n      })\r\n      .catch((er) => {\r\n        console.error(er);\r\n        dispatch({ type: 'reject', error: er });\r\n      });\r\n  }, []);\r\n  \r\n  return {\r\n    loading: state.loading,\r\n    error: state.error,\r\n    data: state.data,\r\n    createRequest,\r\n    setData: useCallback(setData, [])\r\n  };\r\n}\r\n\r\nexport default useHttp;\r\n","import { memo, useEffect, useRef, useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { IoCloseOutline } from 'react-icons/io5';\r\n\r\nimport Loader from '../../components/UI/Loader';\r\nimport useHttp from '../../hooks/useHttp';\r\nimport './DropInput.scss';\r\n\r\nconst DropInput = () => {\r\n  const { loading, data, createRequest, setData } = useHttp();\r\n  const videoRef = useRef();\r\n  const [play, setPlay] = useState(false);\r\n\r\n  const handleImageUpload = (files) => {\r\n    const form = new FormData();\r\n    Array.from(files).forEach(e => form.append('frame', e));\r\n\r\n    createRequest({\r\n      url: '/api/images',\r\n      body: form,\r\n      method: 'post',\r\n      callback: () => setPlay(false)\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      if (play) { \r\n        videoRef.current.play();\r\n      } else {\r\n        videoRef.current.pause();\r\n      }\r\n    }\r\n  }, [play, data]);\r\n\r\n  const {\r\n    getRootProps,\r\n    getInputProps, \r\n    isDragActive\r\n  } = useDropzone({ onDrop: handleImageUpload });\r\n\r\n  const classDrop = ['dropinput'];\r\n  if (data) {\r\n    classDrop.push('dropinput--active');\r\n  }\r\n\r\n  let view = (\r\n    <>\r\n      <input {...getInputProps()} accept=\"image/*\" multiple />\r\n      {isDragActive\r\n        ? 'Drop images here'\r\n        : 'Drop the images'\r\n      }\r\n    </>\r\n  );\r\n\r\n  if (data) {\r\n    view = (\r\n      <>\r\n        <button className=\"dropinput__btn\" onClick={() => setData(null)}>\r\n          <IoCloseOutline className=\"dropinput__icon\" />\r\n        </button>\r\n        {!play && (\r\n          <button \r\n            className=\"dropinput__btn-main\" \r\n            onClick={() => setPlay(videoRef.current.paused)} />\r\n        )}\r\n        <video \r\n          className=\"dropinput__video\"\r\n          name=\"media\"\r\n          controls\r\n          ref={videoRef} \r\n          onClick={() => setPlay(videoRef.current.paused)}\r\n        >\r\n          <source src={`/video/${data.timestamp}/video.mp4`} type=\"video/mp4\" />\r\n          Your browser does not support video playback.\r\n        </video>\r\n      </>\r\n    )\r\n  }\r\n\r\n  else if (loading) {\r\n    view = <Loader />;\r\n  }\r\n\r\n  return (\r\n    <div className={classDrop.join(' ')} {...getRootProps()}>\r\n      {view}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(DropInput);\r\n","import React from 'react';\r\n\r\nconst Logo = () => (\r\n  <div className=\"logo\">\r\n    imgs<span className=\"logo__high\">2</span>vid\r\n  </div>\r\n);\r\n\r\nexport default Logo;\r\n","import { memo } from 'react';\r\n\r\nimport DropInput from '../../components/DropInput/DropInput';\r\nimport Logo from '../../components/UI/Logo';\r\nimport './MainView.scss';\r\n\r\nconst MainView = () => (\r\n  <main className=\"mainview\">\r\n    <Logo />\r\n    <DropInput />\r\n  </main>\r\n);\r\n\r\nexport default memo(MainView);\r\n","import MainView from \"./containers/MainView/MainView\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <MainView />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.scss';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}